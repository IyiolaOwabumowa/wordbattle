{"version":3,"sources":["constants/game.constants.js","reducers/game.reducers.js","reducers/index.js","store.js","actions/game.actions.js","components/WordBoard.js","assets/logo.png","components/Splash.js","components/CompatibilityWarning.js","components/GameWarmup.js","components/Header.js","components/WordDeck.js","assets/keypress.mp3","assets/right.mp3","assets/wrong.mp3","components/GamePlay.js","components/Results.js","assets/gameplay.mp3","App.js","reportWebVitals.js","index.js"],"names":["gameConstants","initialState","room","gameStatus","stopMusic","connectedPlayers","players","combineReducers","gameReducer","state","action","type","joinLoading","creator","acceptRequest","count","musicStatus","value","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","gameActions","dispatch","startGame","endGame","prepareToStart","socket","emit","setMusicStatus","success","getRoom","localStorage","getItem","joinRoom","playername","response","status","setItem","leaveRoom","saveConnectedPlayers","length","allPlayers","getConnectedPlayers","stopGameplayMusic","WordBoard","letters","isLettersEmpty","className","map","letter","toUpperCase","uuid","Splash","useState","visible","setVisible","step","setStep","useEffect","setTimeout","name","content","src","logo","style","display","justifyContent","alignItems","color","CompatibilityWarning","padding","textAlign","lineHeight","GameWarmup","fade","gameplayMusic","useDispatch","useHistory","setPlayername","roomIdVal","setRoomIdVal","roomId","setRoomId","loading","setLoading","mobile","setMobile","notification","setNotification","clicked","setClicked","showSplash","setShowSplash","userAudio","useRef","current","useSelector","isMobile","startHandler","data","roomHandler","absenceHandler","on","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","off","slice","placeholder","maxLength","onChange","e","target","onClick","shortid","generate","substring","marginTop","marginBottom","disabled","Header","points","time","opponent","WordDeck","deck","getOccurrence","obj","idx","includes","GamePlay","history","formedWords","setFormedWords","setLetters","setTime","setPoints","array","forEach","v","play","right","Audio","Right","wrong","Wrong","volume","timeHandler","push","deckHandler","console","log","word","j","newArray","Keypress","onKeyPress","key","some","o","getOccurrenceArrayOfObjects","catch","error","i","letterObject","oldLetters","k","pop","concatLetters","submitWord","window","addEventListener","removeEventListener","Results","results","setResults","sentRequest","setSentRequest","receivedRequests","setReceivedRequests","requestRejected","setRequestRejected","creatorDisconnected","setCreatorDisconnected","resultHandler","JSON","stringify","rematchHandler","disconnectHandler","rematchResponseHandler","to","property","result","index","fontSize","id","App","setSocket","gameplay","pause","io","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b372b521.chunk.js","sourcesContent":["export const gameConstants = {\n  ASSIGN_CREATOR: \"ASSIGN_CREATOR\",\n  ACCEPT_REQUEST: \"ACCEPT_REQUEST\",\n  ALL_PLAYERS:\"ALL_PLAYERS\",\n  MUSIC_STATUS: \"MUSIC_STATUS\",\n  LEAVE_ROOM: \"LEAVE_ROOM\",\n  START_GAME: \"START_GAME\",\n  END_GAME: \"END_GAME\",\n  GET_ROOM: \"GET_ROOM\",\n  CONNECTED_PLAYERS: \"CONNECTED_PLAYERS\",\n  JOIN_ROOM_REQUEST: \"JOIN_ROOM_REQUEST\",\n  JOIN_ROOM_SUCCESS: \"JOIN_ROOM_SUCCESS\",\n  JOIN_ROOM_FAILURE: \"JOIN_ROOM_FAILURE\",\n  STOP_GAME_MUSIC: \"STOP_GAME_MUSIC\",\n};\n","import { gameConstants } from \"../constants/game.constants.js\";\nimport moment from \"moment\";\n\nconst initialState = {\n  room: null,\n  gameStatus: \"ended\",\n  stopMusic: false,\n  connectedPlayers: 0,\n  players: [],\n};\n\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case gameConstants.JOIN_ROOM_FAILURE:\n      return {\n        ...state,\n        joinLoading: true,\n      };\n\n    case gameConstants.JOIN_ROOM_SUCCESS:\n      return {\n        ...state,\n        joinLoading: false,\n        room: action.room,\n      };\n\n    case gameConstants.LEAVE_ROOM:\n      return {\n        ...state,\n        room: null,\n      };\n\n    case gameConstants.GET_ROOM:\n      return {\n        ...state,\n        room: action.room,\n      };\n\n    case gameConstants.START_GAME:\n      return {\n        ...state,\n        gameStatus: action.gameStatus,\n      };\n    case gameConstants.ASSIGN_CREATOR:\n      return {\n        ...state,\n        creator: action.creator,\n        acceptRequest: action.acceptRequest,\n      };\n    case gameConstants.ACCEPT_REQUEST:\n      return {\n        ...state,\n        acceptRequest: action.acceptRequest,\n      };\n    case gameConstants.END_GAME:\n      return {\n        ...state,\n        gameStatus: action.gameStatus,\n      };\n    case gameConstants.ALL_PLAYERS:\n      return {\n        ...state,\n        players: action.players,\n      };\n    case gameConstants.CONNECTED_PLAYERS:\n      return {\n        ...state,\n        connectedPlayers: action.count,\n      };\n\n    case gameConstants.MUSIC_STATUS:\n      return {\n        ...state,\n        musicStatus: action.musicStatus,\n      };\n\n    case gameConstants.STOP_GAME_MUSIC:\n      return {\n        ...state,\n        stopMusic: action.value,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./game.reducers.js\";\n\nexport default combineReducers({\n  gameReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"./reducers\";\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n","import { gameConstants } from \"../constants/game.constants\";\n\nexport const gameActions = {\n  acceptRequest,\n  startGame,\n  endGame,\n  prepareToStart,\n  setMusicStatus,\n  getRoom,\n  joinRoom,\n  leaveRoom,\n  saveConnectedPlayers,\n  getConnectedPlayers,\n  stopGameplayMusic,\n};\n\nfunction joinRoom(socket, playername, room, creator) {\n  return (dispatch) => {\n    dispatch(request());\n    socket.emit(\"joinRoom\", { playername, room, creator }, (response) => {\n      if (response.status === \"ok\") {\n        dispatch(success(room));\n        localStorage.setItem(\"room\", room);\n      }\n    });\n  };\n\n  function request() {\n    return { type: gameConstants.JOIN_ROOM_REQUEST };\n  }\n\n  function success(room) {\n    return { type: gameConstants.JOIN_ROOM_SUCCESS, room };\n  }\n\n  function failure() {\n    return { type: gameConstants.JOIN_ROOM_FAILURE };\n  }\n}\n\nfunction prepareToStart(socket, room) {\n  return (dispatch) => {\n    socket.emit(\"prepareToStart\", { room });\n    dispatch(success());\n  };\n\n  function success() {\n    return {\n      type: gameConstants.ASSIGN_CREATOR,\n      creator: true,\n    };\n  }\n}\n\nfunction acceptRequest() {\n  return (dispatch) => {\n    dispatch(success());\n  };\n\n  function success() {\n    return {\n      type: gameConstants.ACCEPT_REQUEST,\n      acceptRequest: true,\n    };\n  }\n}\n\nfunction startGame() {\n  return (dispatch) => {\n    dispatch(success());\n  };\n\n  function success() {\n    return { type: gameConstants.START_GAME, gameStatus: \"started\" };\n  }\n}\n\nfunction endGame() {\n  return (dispatch) => {\n    dispatch(success());\n  };\n\n  function success() {\n    return { type: gameConstants.END_GAME, gameStatus: \"ended\" };\n  }\n}\n\nfunction getRoom() {\n  return (dispatch) => {\n    localStorage.getItem(\"room\");\n    dispatch(success(room));\n  };\n\n  function success() {\n    return { type: gameConstants.LEAVE_ROOM, room };\n  }\n}\n\nfunction leaveRoom(socket, room) {\n  return (dispatch) => {\n    // socket.emit(\"joinRoom\", { playername, room }, (response) => {\n    //   if (response.status === \"ok\") {\n    //     success(room);\n    //     localStorage.setItem(\"room\", room);\n    //   }\n    // });\n\n    socket.emit(\"leaveRoom\", room);\n    localStorage.setItem(\"room\", null);\n    dispatch(success());\n  };\n\n  function success() {\n    return { type: gameConstants.LEAVE_ROOM, room: null };\n  }\n}\n\nfunction saveConnectedPlayers(players) {\n  return (dispatch) => {\n    localStorage.setItem(\"connected-players\", players.length);\n    dispatch(success(players.length));\n    dispatch(allPlayers(players));\n\n  };\n\n  function success(count) {\n    return { type: gameConstants.CONNECTED_PLAYERS, count };\n  }\n  function allPlayers(players) {\n    return { type: gameConstants.ALL_PLAYERS, players };\n  }\n}\n\nfunction getConnectedPlayers() {\n  return (dispatch) => {\n    // socket.emit(\"joinRoom\", { playername, room }, (response) => {\n    //   if (response.status === \"ok\") {\n    //     success(room);\n    //     localStorage.setItem(\"room\", room);\n    //   }\n    // });\n\n    dispatch(success(localStorage.getItem(\"connected-players\")));\n  };\n\n  function success(count) {\n    return { type: gameConstants.CONNECTED_PLAYERS, count };\n  }\n}\n\nfunction setMusicStatus(musicStatus) {\n  return (dispatch) => {\n    dispatch(success(musicStatus));\n  };\n\n  function success(musicStatus) {\n    return { type: gameConstants.MUSIC_STATUS, musicStatus };\n  }\n}\n\nfunction stopGameplayMusic(value) {\n  return (dispatch) => {\n    // socket.emit(\"joinRoom\", { playername, room }, (response) => {\n    //   if (response.status === \"ok\") {\n    //     success(room);\n    //     localStorage.setItem(\"room\", room);\n    //   }\n    // });\n\n    dispatch(success(value));\n  };\n\n  function success(value) {\n    return { type: gameConstants.STOP_GAME_MUSIC, value };\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\n\nconst WordBoard = ({ letters, isLettersEmpty }) => {\n  return (\n    <div className=\"board-container\">\n      <p>\n        {\" \"}\n        Type letters on your keyboard and press <strong>ENTER</strong> to submit\n        each word you form\n      </p>\n\n      <p>Form as many words as possible from your word deck</p>\n\n      <div className=\"letter-container\">\n        {isLettersEmpty ? (\n          <>\n            <h1>Start Typing</h1>\n          </>\n        ) : (\n          <>\n            {letters.map((letter) => {\n              return (\n                <div className=\"deck-letter board-letter\" key={uuid()}>\n                  <h1>{letter.toUpperCase()}</h1>\n                </div>\n              );\n            })}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBoard;\n","export default __webpack_public_path__ + \"static/media/logo.d0544f13.png\";","import React, { useState, useEffect } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport MetaTags from \"react-meta-tags\";\n\nconst Splash = () => {\n  const [visible, setVisible] = useState(false);\n  const [step, setStep] = useState(1);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n        setTimeout(() => {\n          setStep(2);\n        }, 200);\n      }, 1900);\n    }, 100);\n  }, [step]);\n\n  return (\n    <>\n      <MetaTags>\n        <title>Cleaning more battle helmets...</title>\n        <meta\n          name=\"Word Battle\"\n          content=\"You have 90 seconds to compete in a room.\"\n        />\n      </MetaTags>\n\n      <div className=\"splash-bg\">\n        {step == 1 ? (\n          <img\n            className={visible ? \"fadeIn logo\" : \"fadeOut logo\"}\n            src={logo}\n          />\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <p\n              className={visible ? \"fadeIn\" : \"fadeOut\"}\n              style={{ color: \"white\" }}\n            >\n              by Iyiola Owabumowa\n            </p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Splash;\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"../assets/logo.png\";\n\nconst CompatibilityWarning = () => {\n  return (\n    <div className=\"splash-bg\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <p\n          style={{\n            color: \"white\",\n            padding: 50,\n            textAlign: \"center\",\n            lineHeight: 2,\n          }}\n        >\n          Sorry, Word Battle doesn't work on mobile phones at the moment.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CompatibilityWarning;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isMobile } from \"react-device-detect\";\nimport { useHistory } from \"react-router-dom\";\nimport { gameActions } from \"../actions/game.actions\";\nimport shortid from \"shortid\";\nimport Splash from \"./Splash\";\nimport CompatibilityWarning from \"./CompatibilityWarning\";\nimport MetaTags from \"react-meta-tags\";\n\nconst GameWarmup = ({ socket, fade, gameplayMusic }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [playername, setPlayername] = useState(\"\");\n  const [roomIdVal, setRoomIdVal] = useState(\"\");\n  const [roomId, setRoomId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [mobile, setMobile] = useState(false);\n  const [time, setTime] = useState(5);\n  const [notification, setNotification] = useState(null);\n  const [clicked, setClicked] = useState(\"warmup\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [visible, setVisible] = useState(false);\n  const userAudio = useRef().current;\n\n  const connectedPlayers = useSelector(\n    (state) => state.gameReducer.connectedPlayers\n  );\n  const players = useSelector((state) => state.gameReducer.players);\n  const room = useSelector((state) => state.gameReducer.room);\n  const gameStatus = useSelector((state) => state.gameReducer.gameStatus);\n\n  const joinRoom = () => {\n    if (roomIdVal.length === 5) {\n      setLoading(true);\n      setNotification(\"Waiting for room owner...\");\n      const creator = false;\n      dispatch(gameActions.joinRoom(socket, playername, roomIdVal, creator));\n    } else {\n      setNotification(\"Enter a valid room id\");\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShowSplash(false);\n      setTimeout(() => {\n        if (!isMobile) {\n          setVisible(true);\n        } else {\n          setMobile(true);\n        }\n      }, 200);\n    }, 5000);\n\n    const startHandler = (data) => {\n      dispatch(gameActions.startGame());\n    };\n\n    const roomHandler = (data) => {\n      setNotification(data);\n      setLoading(false);\n    };\n\n    const absenceHandler = (data) => {\n      setNotification(data);\n      setLoading(false);\n    };\n    socket.on(\"startGame\", startHandler);\n    socket.on(\"full-room\", roomHandler);\n    socket.on(\"creator-not-here\", absenceHandler);\n\n    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n      userAudio.srcObject = stream;\n      \n    });\n\n    return () => {\n      socket.off(\"startGame\", startHandler);\n      socket.off(\"full-room\", roomHandler);\n      socket.off(\"creator-not-here\", absenceHandler);\n    };\n  }, []);\n\n  useEffect(() => {}, [connectedPlayers]);\n\n  if (showSplash) {\n    return <Splash />;\n  }\n\n  if (mobile) {\n    return <CompatibilityWarning />;\n  }\n\n  return (\n    <>\n      <MetaTags>\n        <title>\n          {gameStatus === \"started\"\n            ? \"Battleground | Word Battle\"\n            : \"Changeroom | Word Battle\"}\n        </title>\n        <meta\n          name=\"Word Battle\"\n          content=\"You have 90 seconds to compete in a room.\"\n        />\n      </MetaTags>\n      <div className={\"warmup-container\"}>\n        <div className={visible ? \"warmup-card-fadeIn\" : \"warmup-card\"}>\n          <div\n            className={notification ? \"notifications-fadeIn\" : \"notifications\"}\n          >\n            <p\n              className={notification ? \"notif-p\" : \"notif-p-fadeOut\"}\n              style={{ color: \"white\" }}\n            >\n              {notification}\n            </p>\n          </div>\n\n          <div className=\"warmup-padding\">\n            <div>\n              {clicked === \"warmup\" && (\n                <>\n                  <h1>Howdy {playername.slice(0, 20)}!</h1>\n                  <p>What's the name you're most proud of?</p>\n                  <input\n                    placeholder=\"Enter your name\"\n                    value={playername}\n                    maxLength={20}\n                    onChange={(e) => {\n                      if (e.target.value.length > 1) {\n                        setNotification(null);\n                      }\n                      localStorage.setItem(\"name\", e.target.value);\n\n                      setPlayername(e.target.value);\n                    }}\n                  />\n                  <button\n                    onClick={() => {\n                      if (playername.length > 1) {\n                        setNotification(null);\n                        setClicked(\"create\");\n                        const creator = true;\n                        setRoomId(shortid.generate().substring(0, 5));\n                        setRoomId((state) => {\n                          dispatch(\n                            gameActions.joinRoom(\n                              socket,\n                              playername,\n                              state,\n                              creator\n                            )\n                          );\n                          return state;\n                        });\n                      } else {\n                        setNotification(\"Enter a player name\");\n                      }\n                    }}\n                    className=\"start-btn\"\n                  >\n                    Create Game Room\n                  </button>\n                  <button\n                    onClick={() => {\n                      if (playername.length > 1) {\n                        setClicked(\"join\");\n                      } else {\n                        setNotification(\"Enter a player name\");\n                      }\n                    }}\n                    className=\"warmup-btn-inv\"\n                  >\n                    Join Room\n                  </button>\n                </>\n              )}\n\n              {clicked === \"create\" && (\n                <>\n                  {connectedPlayers - 1 == 0 || connectedPlayers - 1 == -1 ? (\n                    <p>Waiting for players to join...</p>\n                  ) : (\n                    <>\n                      {connectedPlayers - 1 == 1 ? (\n                        <p>\n                          <strong>\n                            {connectedPlayers - 1} player has joined this room\n                          </strong>\n                        </p>\n                      ) : (\n                        <p>\n                          <strong>\n                            {connectedPlayers - 1} players have joined this room\n                          </strong>\n                        </p>\n                      )}\n                    </>\n                  )}\n                  <h1 style={{ marginTop: 30 }}>{roomId}</h1>\n                  <p style={{ textAlign: \"center\", lineHeight: 2 }}>\n                    Share your room id with your friends to join this room and\n                    compete with you.\n                  </p>\n                  {connectedPlayers - 1 >= 1 && (\n                    <button\n                      onClick={() => {\n                        setLoading(true);\n                        dispatch(gameActions.prepareToStart(socket, room));\n                      }}\n                      className=\"start-btn\"\n                    >\n                      {loading ? (\n                        <div>\n                          <div className=\"lds-ring\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                          </div>\n                        </div>\n                      ) : (\n                        \"Start Game\"\n                      )}\n                    </button>\n                  )}\n\n                  <button\n                    onClick={() => {\n                      setNotification(null);\n                      setClicked(\"warmup\");\n\n                      setLoading(false);\n                      dispatch(gameActions.leaveRoom(socket, room));\n                    }}\n                    className=\"warmup-btn-inv\"\n                  >\n                    Go Back\n                  </button>\n                </>\n              )}\n              {clicked === \"join\" && (\n                <>\n                  <h1>Enter with a room id</h1>\n\n                  <p style={{ marginBottom: 50, textAlign: \"center\" }}>\n                    {connectedPlayers - 1 >= 1 && (\n                      <p>The room owner should start the game soon</p>\n                    )}\n                  </p>\n\n                  <input\n                    placeholder=\"Room ID\"\n                    value={roomIdVal}\n                    maxLength={5}\n                    onChange={(e) => {\n                      if (e.target.value.length === 5) {\n                        setNotification(null);\n                      } else {\n                        setNotification(\"Enter a valid room id\");\n                      }\n                      setRoomIdVal(e.target.value);\n                    }}\n                  />\n                  <button\n                    onClick={() => {\n                      joinRoom();\n                    }}\n                    disabled={loading}\n                    className=\"start-btn\"\n                  >\n                    {loading ? (\n                      <>\n                        <div className=\"lds-ring\">\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                        </div>\n                      </>\n                    ) : (\n                      \"Join Game\"\n                    )}\n                  </button>\n                  <button\n                    onClick={() => {\n                      setClicked(\"warmup\");\n                      setNotification(null);\n                      setLoading(false);\n                      dispatch(gameActions.leaveRoom(socket, room));\n                    }}\n                    className=\"warmup-btn-inv\"\n                  >\n                    Go Back\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GameWarmup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Header = ({ points, notification, time, opponent }) => {\n  const connectedPlayers = useSelector(\n    (state) => state.gameReducer.connectedPlayers\n  );\n  return (\n    <div className=\"header\">\n      {notification ? (\n        <p>\n          <strong>{notification}</strong>\n        </p>\n      ) : (\n        <>\n          <p>\n            <strong>Time Left: </strong>\n            {time} seconds\n          </p>\n          <p>\n            <strong>Points: </strong>\n            {points}pts\n          </p>\n          <p>\n            <strong>\n              You're competing with {connectedPlayers - 1}{\" \"}\n              {connectedPlayers - 1 == 1 ? \"player\" : \"players\"}\n            </strong>\n            {opponent}\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\n\nconst WordDeck = ({ deck, letters, getOccurrence }) => {\n  return (\n    <div className=\"worddeck-container\">\n      {deck.map((obj, idx) => {\n        return (\n          <div\n            className={` ${\n              letters.includes(obj.name) && obj.count === 0\n                ? \"deck-letter deck-letter-used\"\n                : \"deck-letter\"\n            }`}\n            key={uuid()}\n          >\n            <h1>{obj.name.toUpperCase()}</h1>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WordDeck;\n","export default __webpack_public_path__ + \"static/media/keypress.a5e4fef1.mp3\";","export default __webpack_public_path__ + \"static/media/right.297a1043.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.c8c85237.mp3\";","import React, { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gameActions } from \"../actions/game.actions\";\nimport MetaTags from \"react-meta-tags\";\n\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport WordBoard from \"./WordBoard\";\nimport WordDeck from \"./WordDeck\";\nimport Keypress from \"../assets/keypress.mp3\";\nimport Right from \"../assets/right.mp3\";\nimport Wrong from \"../assets/wrong.mp3\";\n\nconst GamePlay = ({ socket, gameplayMusic }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const deck = useRef([]);\n  const [deckSet, setDeckSet] = useState(false);\n  const [formedWords, setFormedWords] = useState([]);\n  const [letters, setLetters] = useState([]);\n  const [time, setTime] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [points, setPoints] = useState(0);\n  const [opponent, setOpponent] = useState(null);\n  const [playing, setPlaying] = useState(false);\n\n  const room = useSelector((state) => state.gameReducer.room);\n\n  const stopMusic = useSelector((state) => state.gameReducer.stopMusic);\n\n  const gameStatus = useSelector((state) => state.gameReducer.gameStatus);\n\n  function getOccurrence(array, value) {\n    var count = 0;\n    array.forEach((v) => v === value && count++);\n    return count;\n  }\n\n  function getOccurrenceArrayOfObjects(array, value) {\n    var count = 0;\n    array.forEach((v) => v.name === value && count++);\n    return count;\n  }\n\n  useEffect(() => {\n    gameplayMusic.play();\n  }, []);\n\n  useEffect(() => {\n    const right = new Audio(Right);\n    const wrong = new Audio(Wrong);\n\n    wrong.volume = 0.5;\n    right.volume = 0.05;\n\n    socket.emit(\"readyToStart\", room);\n\n    const timeHandler = (data) => {\n      setTime(data);\n      if (data == 1) {\n        // gameplayMusic.pause();\n        dispatch(gameActions.endGame());\n        history.push(\"/results\");\n      }\n    };\n\n    const deckHandler = (data) => {\n      console.log(\"generated\");\n      deck.current = data;\n    };\n\n    const answerHandler = ({ word, status }) => {\n      console.log(points);\n      if (status == 200) {\n        right.play();\n        setFormedWords([...formedWords, word]);\n        setPoints(points + 5);\n        setLetters([]);\n        for (var j = 0; j < deck.current.length; j++) {\n          const newArray = deck.current;\n          newArray[j] = { ...newArray[j], count: 1 };\n\n          deck.current = [...newArray];\n        }\n      } else {\n        wrong.play();\n      }\n    };\n\n    const pointsHandler = (points) => {\n      console.log(points);\n      setPoints(points);\n    };\n\n    socket.on(\"game-timer\", timeHandler);\n    socket.on(\"getRoomDeck\", deckHandler);\n    socket.on(\"answer\", answerHandler);\n    socket.on(\"playerPoints\", pointsHandler);\n\n    return () => {\n      socket.off(\"game-timer\", timeHandler);\n      socket.on(\"getRoomDeck\", deckHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    const audio = new Audio(Keypress);\n    const right = new Audio(Right);\n    const wrong = new Audio(Wrong);\n\n    audio.volume = 0.1;\n    right.volume = 0.05;\n    wrong.volume = 0.5;\n\n    const submitWord = () => {\n      const concatLetters = () => {\n        var word = \"\";\n        letters.forEach((letter) => (word += letter));\n        return word;\n      };\n\n      const word = concatLetters();\n\n      const correct = true;\n\n      if (formedWords.includes(word)) {\n        setNotification(\"You've found this word already\");\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n      } else {\n        socket.emit(\"checkWord\", word);\n      }\n    };\n\n    const onKeyPress = ({ key }) => {\n      if (deck.current.some((o) => o.name === key)) {\n        if (\n          getOccurrence(letters, key) < getOccurrenceArrayOfObjects(deck.current, key)\n        ) {\n          audio\n            .play()\n            .then(() => {})\n            .catch((error) => console.error);\n\n          setLetters([...letters, key]);\n          deck.current.map((letter) => {\n            if (letter.name === key && letter.count === 1) {\n              const newArray = deck.current;\n              newArray[i] = { ...newArray[i], count: 0 };\n              deck.current = [...newArray];\n              return;\n            }\n          });\n\n          for (var i = 0; i < deck.current.length; i++) {\n            const letterObject = deck.current[i];\n            if (letterObject.name === key && letterObject.count === 1) {\n              const newArray = deck.current;\n              newArray[i] = { ...newArray[i], count: 0 };\n              deck.current = [...newArray];\n              break;\n            }\n          }\n        }\n      }\n\n      if (key === \"Enter\") {\n        audio\n          .play()\n          .then(() => {})\n          .catch((error) => console.error);\n      }\n      if (key === \"Backspace\") {\n        const oldLetters = letters;\n        for (var k = deck.current.length - 1; k > 0; k--) {\n          const letterObject = deck.current[k];\n          if (\n            letterObject.name === letters[letters.length - 1] &&\n            letterObject.count === 0\n          ) {\n            const newArray = deck.current;\n            newArray[k] = { ...newArray[k], count: 1 };\n            deck.current = [...newArray];\n            break;\n          }\n        }\n        oldLetters.pop();\n        setLetters([...oldLetters]);\n      }\n      if (key === \"Enter\") {\n        submitWord();\n      }\n    };\n\n    window.addEventListener(\"keydown\", onKeyPress);\n\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyPress);\n    };\n  }, [formedWords, letters, points, stopMusic]);\n\n  return (\n    <>\n      <Header\n        points={points}\n        notification={notification}\n        time={time}\n        opponent={opponent}\n      />\n      <WordBoard letters={letters} isLettersEmpty={letters.length === 0} />\n      <WordDeck deck={deck.current} letters={letters} getOccurrence={getOccurrence} />\n    </>\n  );\n};\n\nexport default GamePlay;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gameActions } from \"../actions/game.actions\";\nimport MetaTags from \"react-meta-tags\";\nimport GamePlay from \"./GamePlay\";\n\nconst Results = ({ socket, gameplayMusic }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [results, setResults] = useState([]);\n  const [notification, setNotification] = useState(null);\n  const [loadResults, setLoadResults] = useState(true);\n  const [sentRequest, setSentRequest] = useState(false);\n  const [receivedRequests, setReceivedRequests] = useState(false);\n  const [requestRejected, setRequestRejected] = useState(false);\n  const [creatorDisconnected, setCreatorDisconnected] = useState(false);\n  const gameStatus = useSelector((state) => state.gameReducer.gameStatus);\n  const room = useSelector((state) => state.gameReducer.room);\n  const creator = useSelector((state) => state.gameReducer.creator);\n  const acceptRequest = useSelector((state) => state.gameReducer.acceptRequest);\n\n  // if (acceptRequest === true) {\n  //   // return (\n  //   //   <GamePlay socket={socket} gameplayMusic={gameplayMusic} />\n  //   //   // <div className=\"loading-container\">\n  //   //   //   <div className=\"loading-card\">\n  //   //   //     <div className=\"lds-ring-result\">\n  //   //   //       <div></div>\n  //   //   //       <div></div>\n  //   //   //       <div></div>\n  //   //   //       <div></div>\n  //   //   //     </div>\n  //   //   //   </div>\n  //   //   // </div>\n  //   // );\n  //   history.push(\"/\");\n  // }\n\n  useEffect(() => {\n    socket.emit(\"gameEnd\", { room });\n\n    const resultHandler = (data) => {\n      // if (data == null && JSON.parse(localStorage.getItem(\"results\"))) {\n      //   setResults(JSON.parse(localStorage.getItem(\"results\")));\n      // } else {\n      localStorage.setItem(\"results\", JSON.stringify(data));\n      setResults(data);\n      dispatch(gameActions.acceptRequest());\n      // setResults((data) => {\n      //   if (data !== null) {\n      //     socket.emit(\"leaveRoom\", \"bye\");\n      //   }\n      //   return data;\n      // });\n\n      //}\n    };\n\n    const rematchHandler = (data) => {\n      if (data > 1) {\n        setReceivedRequests(true);\n        setNotification(`${data} players have requested a rematch`);\n      } else if (data == null || data == 0) {\n        setNotification(null);\n        setReceivedRequests(false);\n      } else {\n        setReceivedRequests(true);\n        setNotification(`${data} player has requested a rematch`);\n      }\n    };\n    const disconnectHandler = (data) => {\n      setNotification(data);\n      setSentRequest(false);\n      setCreatorDisconnected(true);\n    };\n\n    const startHandler = (data) => {\n      dispatch(gameActions.startGame());\n      setRequestRejected(false);\n      setSentRequest(false);\n      setNotification(null);\n    };\n    const rematchResponseHandler = (data) => {\n      if (data === \"rejected\") {\n        setSentRequest(false);\n        setRequestRejected(true);\n        setNotification(\"Your rematch request was rejected\");\n      }\n    };\n\n    const absenceHandler = (data) => {\n      setNotification(data);\n      setLoading(false);\n    };\n    socket.on(\"startGame\", startHandler);\n    socket.on(\"gameResults\", resultHandler);\n    socket.on(\"rematchResponse\", rematchResponseHandler);\n    socket.on(\"receiveRematchRequest\", rematchHandler);\n    socket.on(\"creatorDisconnectOnRequest\", disconnectHandler);\n    socket.on(\"creator-not-here\", absenceHandler);\n\n    return () => {\n      socket.off(\"gameResults\", resultHandler);\n      socket.off(\"receiveRematchRequest\", rematchHandler);\n      socket.off(\"creatorDisconnectOnRequest\", disconnectHandler);\n      socket.off(\"rematchResponse\", rematchResponseHandler);\n      socket.off(\"startGame\", startHandler);\n      socket.off(\"creator-not-here\", absenceHandler);\n\n      //socket.emit(\"leaveRoom\", \"leave\");\n    };\n  }, []);\n\n  if (gameStatus === \"started\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <MetaTags>\n        <title>Battle Results | Word Battle</title>\n        <meta\n          name=\"Word Battle\"\n          content=\"You have 90 seconds to compete in a room.\"\n        />\n        <meta property=\"og:title\" content=\"Stingy Cards\" />\n      </MetaTags>\n      <div className=\"result-container\">\n        <div className=\"result-card\">\n          <div\n            className={notification ? \"notifications-fadeIn\" : \"notifications\"}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <p\n              className={notification ? \"notif-p\" : \"notif-p-fadeOut\"}\n              style={{ color: \"white\" }}\n            >\n              {notification}\n            </p>\n          </div>\n\n          <div className=\"result-padding\">\n            <h1>Top Players for this round</h1>\n\n            {results !== null ? (\n              results.slice(0, 8).map((result, index) => {\n                return (\n                  <p style={{ fontSize: 18, marginTop: 25 }} key={result.id}>\n                    {index + 1}. {result.playername}{\" \"}\n                    <strong>({result.points} points)</strong>\n                  </p>\n                );\n              })\n            ) : (\n              <p\n                style={{\n                  marginTop: 20,\n                  marginBottom: 40,\n                  lineHeight: 2,\n                  textAlign: \"center\",\n                }}\n              >\n                The leaderboard for this round is no longer available. <br />\n                Go home to play again with your friends\n              </p>\n            )}\n\n            <div style={{ marginBottom: 30 }}></div>\n\n            {!receivedRequests ? (\n              <>\n                {creatorDisconnected ? (\n                  <></>\n                ) : (\n                  <>\n                    {creator ? (\n                      <div style={{ marginBottom: 30 }}></div>\n                    ) : (\n                      <>\n                        {!results ? (\n                          <></>\n                        ) : (\n                          <button\n                            onClick={() => {\n                              socket.emit(\"sendRematchRequest\", room);\n                              setSentRequest(true);\n                              setNotification(\n                                \"Waiting for room owner to accept your rematch\"\n                              );\n                            }}\n                            style={{ marginTop: 50 }}\n                            className=\"warmup-btn-inv\"\n                            disabled={sentRequest}\n                          >\n                            {sentRequest ? (\n                              <>\n                                <div className=\"lds-ring\">\n                                  <div></div>\n                                  <div></div>\n                                  <div></div>\n                                  <div></div>\n                                </div>\n                              </>\n                            ) : (\n                              <>\n                                {requestRejected === true ? (\n                                  <p> {\"Request Rematch Again\"}</p>\n                                ) : (\n                                  <>\n                                    <p>Request Rematch</p>\n                                  </>\n                                )}\n                              </>\n                            )}\n                          </button>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n\n                <button\n                  onClick={() => {\n                    dispatch(gameActions.setMusicStatus(null));\n                    socket.emit(\"leaveRoom\", room);\n                    history.push(\"/\");\n                  }}\n                  style={{ marginTop: 10 }}\n                  className=\"warmup-btn-inv\"\n                >\n                  Go Home\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  onClick={() => {\n                    dispatch(gameActions.setMusicStatus(null));\n                    dispatch(gameActions.prepareToStart(socket, room));\n                    socket.emit(\"acceptRematchRequest\", room);\n                  }}\n                  style={{ marginTop: 50 }}\n                  className=\"warmup-btn-inv\"\n                  disabled={sentRequest}\n                >\n                  Accept Rematch\n                </button>\n\n                <button\n                  onClick={() => {\n                    socket.emit(\"rejectRematchRequest\", room);\n                    setNotification(null);\n                    setReceivedRequests(false);\n                  }}\n                  style={{ marginTop: 10 }}\n                  className=\"warmup-btn-inv\"\n                >\n                  Reject Rematch\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Results;\n","export default __webpack_public_path__ + \"static/media/gameplay.2e1ddf7f.mp3\";","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gameActions } from \"./actions/game.actions\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport WordBoard from \"./components/WordBoard\";\nimport GameWarmup from \"./components/GameWarmup\";\nimport GamePlay from \"./components/GamePlay\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Results from \"./components/Results\";\nimport Splash from \"./components/Splash\";\nimport gameplay from \"./assets/gameplay.mp3\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [playerCount, setPlayerCount] = useState(null);\n  const [time, setTime] = useState(5);\n  const [count, setCount] = useState(null);\n  const [channelName, setChannelName] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  const gameStatus = useSelector((state) => state.gameReducer.gameStatus);\n  const musicStatus = useSelector((state) => state.gameReducer.musicStatus);\n\n  let gameplayMusic = useRef();\n\n\n  useEffect(() => {\n    gameplayMusic.current = new Audio(gameplay);\n    gameplayMusic.current.volume = 0.15;\n    return () => {\n      gameplayMusic.current.pause();\n    };\n  }, []);\n\n  useEffect(() => {\n    const socket = io(\"/\"); //formerly http://localhost:4000\n    setSocket(socket);\n\n    const connectionCountHandler = (data) => {\n      dispatch(gameActions.saveConnectedPlayers(data));\n    };\n\n    socket.on(\"connected-players\", connectionCountHandler);\n  }, []);\n\n  if (socket) {\n    return (\n      <Router>\n        {gameStatus === \"started\" && (\n          <Route\n            path=\"/\"\n            exact\n            component={() => (\n              <GamePlay socket={socket} gameplayMusic={gameplayMusic.current} />\n            )}\n          />\n        )}\n\n        <Route\n          path=\"/\"\n          exact\n          component={() => (\n            <GameWarmup socket={socket} gameplayMusic={gameplayMusic.current} />\n          )}\n        />\n\n        <Route\n          path=\"/results\"\n          exact\n          component={() => (\n            <Results socket={socket} gameplayMusic={gameplayMusic.current} />\n          )}\n        />\n      </Router>\n    );\n  } else {\n    return <div className=\"splash-bg\"></div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}